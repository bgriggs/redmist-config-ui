<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:ch="clr-namespace:BigMission.RedMist.Config.UI.Shared.Channels"
			 xmlns:dialog="clr-namespace:DialogHostAvalonia;assembly=DialogHost.Avalonia"
			 xmlns:actipro="http://schemas.actiprosoftware.com/avaloniaui"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="BigMission.RedMist.Config.UI.Shared.Channels.ChannelsView">
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<ch:ChannelsViewModel />
	</Design.DataContext>
	<UserControl.Styles>
		<Style Selector="TextBlock.field">
			<Setter Property="Margin" Value="3"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
		<Style Selector="TextBlock.note">
			<Setter Property="Margin" Value="15,0,0,3"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
		</Style>
		<Style Selector="TextBox.field">
			<Setter Property="Margin" Value="0,2,0,2"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
		</Style>
	</UserControl.Styles>

	<!--Add/Edit channel dialog-->
	<dialog:DialogHost Identifier="MainDialogHost" Background="{actipro:ThemeResource Container2BackgroundBrush}" 
					   DialogMargin="3" dialog:DialogHostStyle.CornerRadius="4" DisableOpeningAnimation="True">
		<dialog:DialogHost.DataTemplates>
			<DataTemplate DataType="ch:ChannelMappingViewModel">
				<StackPanel>
					<TextBlock Classes="theme-text-heading" Text="Add/Edit Channel" Margin="4"/>
					<Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto" 
						  ColumnDefinitions="Auto,Auto,*" Margin="10">
						<!--Name-->
						<TextBlock Text="Name" Classes="field"/>
						<TextBox Grid.Column="1" Classes="field" MinWidth="130" Text="{Binding Name}" HorizontalAlignment="Left"
								 IsEnabled="{Binding !IsReserved}"/>
						<TextBlock Classes="note size-xs" Text="Reference name of the channel." Grid.Row="1" Grid.ColumnSpan="3"/>

						<!--Reserved Channel-->
						<TextBlock Text="Reserved Channel:" Grid.Row="2" Classes="field"/>
						<TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding IsReserved, Converter={StaticResource BoolToYesNoConverter}}" 
								   HorizontalAlignment="Left" VerticalAlignment="Center"/>
						<TextBlock Classes="note size-xs" Text="Reserved channels are implemented by the system. Changes are limited." 
								   Grid.Row="3" Grid.ColumnSpan="3"/>

						<!--Abbreviation-->
						<TextBlock Text="Abbreviation" Grid.Row="4" Classes="field"/>
						<TextBox Grid.Row="4" Grid.Column="1" Classes="field" MinWidth="70" 
								 Text="{Binding Abbreviation}" HorizontalAlignment="Left"/>
						<TextBlock Classes="note size-xs" Text="Short display name." Grid.Row="5" Grid.ColumnSpan="3"/>

						<!--String Value-->
						<TextBlock Text="String Value" Grid.Row="6" Classes="field"/>
						<ToggleSwitch Grid.Row="6" Grid.Column="1" Classes="field" MinWidth="70" IsChecked="{Binding IsStringValue}" 
									  HorizontalAlignment="Left" IsEnabled="{Binding !IsReserved}"/>
						<TextBlock Classes="note size-xs" Text="Select for non-numeric types, e.g. Enums or Table strings." Grid.Row="7" 
								   Grid.ColumnSpan="3"/>

						<!--Data Type-->
						<TextBlock Text="Data Type" Grid.Row="8" Classes="field" IsVisible="{Binding !IsStringValue}"/>
						<ComboBox Grid.Row="8" Grid.Column="1" Classes="field" MinWidth="120" ItemsSource="{Binding DataTypes}" 
								  SelectedItem="{Binding SelectedDataType}" HorizontalAlignment="Left" IsVisible="{Binding !IsStringValue}" 
								  IsEnabled="{Binding !IsReserved}">
							<ComboBox.ItemTemplate>
								<DataTemplate>
									<TextBlock Text="{Binding DisplayName}"/>
								</DataTemplate>
							</ComboBox.ItemTemplate>
						</ComboBox>
						<TextBlock Classes="note size-xs" Text="Channel quantity." Grid.Row="9" Grid.ColumnSpan="3" 
								   IsVisible="{Binding !IsStringValue}"/>

						<!--Base Units-->
						<TextBlock Text="Base Units" Grid.Row="10" Classes="field" IsVisible="{Binding !IsStringValue}"/>
						<ComboBox Grid.Row="10" Grid.Column="1" Classes="field" MinWidth="120" ItemsSource="{Binding Units}" 
								  SelectedItem="{Binding SelectedBaseUnits}" HorizontalAlignment="Left" IsVisible="{Binding !IsStringValue}" 
								  IsEnabled="{Binding !IsReserved}"/>
						<TextBlock Classes="note size-xs" Text="Units coming into the channel." Grid.Row="11" Grid.ColumnSpan="3" 
								   IsVisible="{Binding !IsStringValue}"/>

						<!--Base Decimal Places-->
						<TextBlock Text="Base Decimal Places" Grid.Row="12" Classes="field" IsVisible="{Binding !IsStringValue}"/>
						<TextBox Grid.Row="12" Grid.Column="1" Classes="field" MinWidth="20" Text="{Binding BaseDecimalPlaces}" 
								 HorizontalAlignment="Left" IsVisible="{Binding !IsStringValue}" IsEnabled="{Binding !IsReserved}"/>
						<TextBlock Classes="note size-xs" Text="Decimal resolution of the base units." Grid.Row="13" 
								   Grid.ColumnSpan="3" IsVisible="{Binding !IsStringValue}"/>

						<!--Display Units-->
						<TextBlock Text="Display Units" Grid.Row="14" Classes="field" IsVisible="{Binding !IsStringValue}"/>
						<ComboBox Grid.Row="14" Grid.Column="1" Classes="field" MinWidth="120" ItemsSource="{Binding Units}" 
								  SelectedItem="{Binding SelectedDisplayUnits}" HorizontalAlignment="Left" IsVisible="{Binding !IsStringValue}"/>
						<TextBlock Classes="note size-xs" Text="Units to convert to on output." Grid.Row="15" Grid.ColumnSpan="3" 
								   IsVisible="{Binding !IsStringValue}"/>

						<!--Display Decimal Places-->
						<TextBlock Text="Display Decimal Places" Grid.Row="16" Classes="field" IsVisible="{Binding !IsStringValue}"/>
						<TextBox Grid.Row="16" Grid.Column="1" Classes="field" MinWidth="20" Text="{Binding DisplayDecimalPlaces}" 
								 HorizontalAlignment="Left" IsVisible="{Binding !IsStringValue}"/>
						<TextBlock Classes="note size-xs" Text="Decimal resolution to output from the channel." Grid.Row="17" 
								   Grid.ColumnSpan="3" IsVisible="{Binding !IsStringValue}"/>
					</Grid>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
						<Button Classes="ok" CommandParameter="{Binding .}" Margin="3"
								Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=dialog:DialogHost}, Path=CloseDialogCommand}"/>
						<Button Classes="cancel" Margin="3"
								Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=dialog:DialogHost}, Path=CloseDialogCommand}"/>
					</StackPanel>
				</StackPanel>
			</DataTemplate>
		</dialog:DialogHost.DataTemplates>

		<StackPanel>
			<!--Search-->
			<StackPanel Orientation="Horizontal" Margin="3">
				<Button Command="{Binding AddChannelClick}" Margin="3" HorizontalAlignment="Left">
					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Add Channel" VerticalAlignment="Center"/>
						<Image Source="{StaticResource addicon}" Width="12" Margin="4,0,0,0"/>
					</StackPanel>
				</Button>
				<TextBlock Text="Search:" VerticalAlignment="Center" Margin="20,0,0,0"/>
				<TextBox Width="180" Text="{Binding SearchText}"/>
				<Button Classes="icon" Command="{Binding ClearSearch}" ToolTip.Tip="Clear search">
					<Image Source="{StaticResource closeicon}"/>
				</Button>
			</StackPanel>

			<!--Channel Grid-->
			<DataGrid x:Name="channelDataGrid" Margin="3,10,3,3" ItemsSource="{Binding Channels}" MinHeight="150"
					  CanUserSortColumns="False" SelectionMode="Single"
					  BorderThickness="1" BorderBrush="Gray"
					  Tapped="DataGrid_Tapped" DoubleTapped="DataGrid_DoubleTapped" KeyUp="DataGrid_KeyUp">
				<DataGrid.Styles>
					<Style Selector="DataGridRow">
						<Setter Property="IsVisible" Value="{Binding IsVisible}"/>
					</Style>
				</DataGrid.Styles>
				<DataGrid.Columns>
					<DataGridTemplateColumn>
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal">
									<Button Classes="icon" ToolTip.Tip="Edit channel" Command="{Binding EditChannelClick}" 
											CommandParameter="{Binding Data}">
										<Image Source="{StaticResource editicon}"/>
									</Button>
									<Button Classes="icon" ToolTip.Tip="Delete channel" Command="{Binding DeleteChannel}" 
											CommandParameter="{Binding Data}" IsVisible="{Binding !IsReserved}">
										<Image Source="{StaticResource closeicon}"/>
									</Button>
								</StackPanel>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
					<DataGridTextColumn Header="Category" Binding="{Binding Category}"/>
					<DataGridTextColumn Header="Used" Binding="{Binding IsUsed, Converter={StaticResource BoolToYesNoConverter}}"/>
					<DataGridTextColumn Header="Source" Binding="{Binding Source}"/>
					<DataGridTextColumn Header="Data Type" Binding="{Binding DataType}"/>
					<DataGridTextColumn Header="Reserved" Binding="{Binding IsReserved, Converter={StaticResource BoolToYesNoConverter}}"/>
				</DataGrid.Columns>
			</DataGrid>
		</StackPanel>

	</dialog:DialogHost>
</UserControl>
